
package a4;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.ListIterator;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author nickr
 */
public class TelaVeterinario extends javax.swing.JFrame {

    /**
     * Creates new form TelaVeterinario
     * @param inicio
     */
    
    public TelaVeterinario(TelaInicial inicio) {
        initComponents();
        this.inicio = inicio;
        verificarCampoVazio();
        
        //listener para gerenciar habilitação dos campos
        jTextFieldCRMV.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                verificarCampoVazio();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                verificarCampoVazio();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                verificarCampoVazio();
            }
            
        });
        
        
       
        //listener pra desabilitar o botão exlcuir
        jTextFieldCRMV.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                
            }

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    jButtonExcluir.setEnabled(true);
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
       
       //listener pra desabilitar o botão exlcuir
       jButtonExcluir.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                limpar_tela();
                jButtonExcluir.setEnabled(false);
            }
           
       });
       
       //listener para o telefone
        jTextFieldTelefone.addKeyListener(new KeyAdapter(){
           
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)){
                    e.consume(); //ignora o caracter
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
            
        });
        
        //listener para o crmv
        jTextFieldCRMV.addKeyListener(new KeyAdapter(){
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)){
                    e.consume();
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
            }

            @Override
            public void keyReleased(KeyEvent e) {
            }
            
        });
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCRMV = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jLabelAgendaTrab = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jTextFieldCRMV = new javax.swing.JTextField();
        jButtonSalvar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();
        jLabelTelefone = new javax.swing.JLabel();
        jTextFieldTelefone = new javax.swing.JTextField();
        jCheckBoxSegunda = new javax.swing.JCheckBox();
        jCheckBoxQuinta = new javax.swing.JCheckBox();
        jCheckBoxTerca = new javax.swing.JCheckBox();
        jCheckBoxSexta = new javax.swing.JCheckBox();
        jCheckBoxQuarta = new javax.swing.JCheckBox();
        jLabelMsg = new javax.swing.JLabel();
        jButtonLimpar = new javax.swing.JButton();
        jLabelCadastroVet = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelCRMV.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabelCRMV.setText("CRMV");

        jLabelNome.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelNome.setText("Nome");

        jLabelAgendaTrab.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelAgendaTrab.setText("Agenda de trabalho");

        jTextFieldNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jTextFieldCRMV.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextFieldCRMV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCRMVActionPerformed(evt);
            }
        });

        jButtonSalvar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonExcluir.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonVoltar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jLabelTelefone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelTelefone.setText("Telefone");

        jTextFieldTelefone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jCheckBoxSegunda.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBoxSegunda.setText("Segunda-feira");

        jCheckBoxQuinta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBoxQuinta.setText("Quinta-feira");

        jCheckBoxTerca.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBoxTerca.setText("Terça-feira");

        jCheckBoxSexta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBoxSexta.setText("Sexta-feira");

        jCheckBoxQuarta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBoxQuarta.setText("Quarta-feira");

        jLabelMsg.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jLabelCadastroVet.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabelCadastroVet.setText("Cadastro Veterinário");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabelCRMV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldCRMV, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNome)
                            .addComponent(jLabelAgendaTrab)
                            .addComponent(jLabelTelefone))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNome)
                            .addComponent(jTextFieldTelefone)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxQuarta)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBoxSegunda)
                                            .addComponent(jCheckBoxTerca))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBoxQuinta)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jButtonLimpar)
                                                .addComponent(jCheckBoxSexta)))))
                                .addGap(0, 56, Short.MAX_VALUE)))))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator1))
                    .addComponent(jLabelCadastroVet))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabelCadastroVet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCRMV)
                    .addComponent(jTextFieldCRMV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelMsg)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNome)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTelefone)
                    .addComponent(jTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAgendaTrab)
                    .addComponent(jCheckBoxSegunda)
                    .addComponent(jCheckBoxQuinta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxTerca)
                    .addComponent(jCheckBoxSexta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxQuarta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonVoltar)
                    .addComponent(jButtonLimpar))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        // TODO add your handling code here:
        IrInicio();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        salvarVetCad();
        limpar_tela();
        jLabelMsg.setText("Veterinário salvo com sucesso!");
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // TODO add your handling code here:
        excluirVetCad();
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jTextFieldCRMVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCRMVActionPerformed
        // TODO add your handling code here
        buscar_dados();
    }//GEN-LAST:event_jTextFieldCRMVActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        // TODO add your handling code here:
        limpar_tela();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVeterinario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVeterinario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVeterinario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVeterinario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    public ListIterator it;
    public ArrayList<Veterinario> veterinarios;
    private TelaInicial inicio;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JCheckBox jCheckBoxQuarta;
    private javax.swing.JCheckBox jCheckBoxQuinta;
    private javax.swing.JCheckBox jCheckBoxSegunda;
    private javax.swing.JCheckBox jCheckBoxSexta;
    private javax.swing.JCheckBox jCheckBoxTerca;
    private javax.swing.JLabel jLabelAgendaTrab;
    private javax.swing.JLabel jLabelCRMV;
    private javax.swing.JLabel jLabelCadastroVet;
    private javax.swing.JLabel jLabelMsg;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelTelefone;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldCRMV;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldTelefone;
    // End of variables declaration//GEN-END:variables

    private void IrInicio() {
        inicio.setVeterinarios(veterinarios);
        inicio.setVisible(true);
        limpar_tela();
        this.setVisible(false);
    }

    private void salvarVetCad() {
        
        boolean edicao = false;
        String crmv_vet = jTextFieldCRMV.getText();
        
        if (veterinarios == null){
            veterinarios = new ArrayList <>();
        }
        
        //reseta o "ponteiro" do iterator
        it = veterinarios.listIterator();
        
        //busca
        while (it.hasNext()){
            Veterinario vetExistente = (Veterinario) it.next();
            
            if (vetExistente.getCRMV().equals(crmv_vet)){
                vetExistente.setCRMV(jTextFieldCRMV.getText());
                vetExistente.setNome(jTextFieldNome.getText());
                vetExistente.setTelefone(jTextFieldTelefone.getText());
                vetExistente.setAgenda(gravar_selecoes());
        
                edicao = true;
                break;
            }
        }

        //se novo vet
        if (edicao == false) {
            Veterinario vet = new Veterinario();
        
            vet.setCRMV(jTextFieldCRMV.getText());
            vet.setNome(jTextFieldNome.getText());
            vet.setTelefone(jTextFieldTelefone.getText());
            vet.setAgenda(gravar_selecoes());
        
            veterinarios.add(vet); //salva na lista
        }
        
        it = veterinarios.listIterator(); //atualiza no iterator
        
    }

    private void excluirVetCad() {
        if (JOptionPane.showConfirmDialog(null, "Deseja realmente apagar esse cadastro?", "Confirmação...", JOptionPane.YES_NO_OPTION) == 0){
            it.remove();
            limpar_tela();
            jLabelMsg.setText("Cadastro deletado");
        } else{
            jLabelMsg.setText("Cadastro não deletado");
        }
    }

    public void buscar_dados() {
        
        Veterinario vetEncontrado = null;
        
        if (veterinarios == null){
            veterinarios = new <Veterinario> ArrayList();
        }
        it = veterinarios.listIterator();
        
        //busca dados
        String crmv_vet = jTextFieldCRMV.getText();
        
        while (it.hasNext() == true){
            Veterinario vet = (Veterinario) it.next();
            if (vet.getCRMV().equals(crmv_vet)){
                mostrar_dados_vet(vet);
                vetEncontrado = vet;
                
                break;
            }
        }
        if (it.hasNext() == false){
            jLabelMsg.setText("Nenhum veterinário cadastrado");
        }
        
        if (vetEncontrado != null) {
            jLabelMsg.setText("Dados do veterinário encontrados");
        } else {
            limpar_tela();
            jLabelMsg.setText("Veterinário com o CRMV " + crmv_vet + " não cadastrado.");
        }
       
    }
    
    private ArrayList gravar_selecoes(){
        ArrayList<String> agenda = new ArrayList <>();
        
        if (jCheckBoxSegunda.isSelected()){
            agenda.add(jCheckBoxSegunda.getText());
        }
        if (jCheckBoxTerca.isSelected()){
            agenda.add(jCheckBoxTerca.getText());
        }
        if (jCheckBoxQuarta.isSelected()){
            agenda.add(jCheckBoxQuarta.getText());
        }
        if (jCheckBoxQuinta.isSelected()){
            agenda.add(jCheckBoxQuinta.getText());
        }
        if (jCheckBoxSexta.isSelected()){
            agenda.add(jCheckBoxSexta.getText());
        }
        return agenda;
    }
    
    private void limpar_tela(){
        
        jTextFieldCRMV.setText("");
        jTextFieldNome.setText("");
        jTextFieldTelefone.setText("");
        jCheckBoxSegunda.setSelected(false);
        jCheckBoxTerca.setSelected(false);
        jCheckBoxQuarta.setSelected(false);
        jCheckBoxQuinta.setSelected(false);
        jCheckBoxSexta.setSelected(false);
        jLabelMsg.setText("");
        
    }
    
    private void verificarCampoVazio() {
        boolean estaVazio = !jTextFieldCRMV.getText().isEmpty();
        
        
                
        jLabelNome.setEnabled(estaVazio);
        jTextFieldNome.setEnabled(estaVazio);
        jLabelTelefone.setEnabled(estaVazio);
        jTextFieldTelefone.setEnabled(estaVazio);
        jLabelAgendaTrab.setEnabled(estaVazio);
        jCheckBoxSegunda.setEnabled(estaVazio);
        jCheckBoxTerca.setEnabled(estaVazio);
        jCheckBoxQuarta.setEnabled(estaVazio);
        jCheckBoxQuinta.setEnabled(estaVazio);
        jCheckBoxSexta.setEnabled(estaVazio);
        jButtonLimpar.setEnabled(estaVazio);
        jButtonSalvar.setEnabled(estaVazio);
        jButtonExcluir.setEnabled(false);
        
    }

    private void mostrar_dados_vet(Veterinario vetEncontrado) {
        
        jTextFieldNome.setText(vetEncontrado.getNome());
        jTextFieldTelefone.setText(vetEncontrado.getTelefone());
          
        if (vetEncontrado.getAgendaTrab().contains("Segunda-feira")){
            jCheckBoxSegunda.setSelected(true);
        }
        if (vetEncontrado.getAgendaTrab().contains("Terça-feira")){
            jCheckBoxTerca.setSelected(true);
        }
        if (vetEncontrado.getAgendaTrab().contains("Quarta-feira")){
            jCheckBoxQuarta.setSelected(true);
        }
        if (vetEncontrado.getAgendaTrab().contains("Quinta-feira")){
            jCheckBoxQuinta.setSelected(true);
        }
        if (vetEncontrado.getAgendaTrab().contains("Sexta-feira")){
            jCheckBoxSexta.setSelected(true);
        }
        
    }
    
}
