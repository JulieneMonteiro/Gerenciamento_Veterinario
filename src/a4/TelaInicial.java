
package a4;

import java.util.ArrayList;

/**
 *
 * @author Nicole de Oliveira Medeiros
 */
public class TelaInicial extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() {
        initComponents();
    }
    
    public void setVeterinarios(ArrayList<Veterinario> veterinarios){
        this.veterinarios = veterinarios;
    }
    public void setConsultas(ArrayList<Consulta> consultas){
        this.consultas = consultas;
    }
    public void setDonos(ArrayList<Dono> donos){
        this.donos = donos;
    }
    public void setAnimais(ArrayList<Animal> animais){
        this.animais = animais;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonVeterinario = new javax.swing.JButton();
        jButtonAgendarConsulta = new javax.swing.JButton();
        jButtonDono = new javax.swing.JButton();
        jButtonAnimal = new javax.swing.JButton();
        jLabelMenu = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonVeterinario.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonVeterinario.setText("Veterinário");
        jButtonVeterinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVeterinarioActionPerformed(evt);
            }
        });

        jButtonAgendarConsulta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonAgendarConsulta.setText("Agendar Consulta");
        jButtonAgendarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgendarConsultaActionPerformed(evt);
            }
        });

        jButtonDono.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonDono.setText("Dono");
        jButtonDono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDonoActionPerformed(evt);
            }
        });

        jButtonAnimal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonAnimal.setText("Animal");
        jButtonAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnimalActionPerformed(evt);
            }
        });

        jLabelMenu.setFont(new java.awt.Font("Serif", 1, 48)); // NOI18N
        jLabelMenu.setText("Menu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAnimal)
                    .addComponent(jButtonDono)
                    .addComponent(jButtonAgendarConsulta)
                    .addComponent(jButtonVeterinario))
                .addGap(100, 100, 100))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabelMenu)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabelMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jButtonDono)
                .addGap(18, 18, 18)
                .addComponent(jButtonAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonVeterinario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAgendarConsulta)
                .addGap(57, 57, 57))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVeterinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVeterinarioActionPerformed
        // TODO add your handling code here:
        IrVet();
    }//GEN-LAST:event_jButtonVeterinarioActionPerformed

    private void jButtonAgendarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgendarConsultaActionPerformed
        // TODO add your handling code here:
        IrConsulta();
    }//GEN-LAST:event_jButtonAgendarConsultaActionPerformed

    private void jButtonDonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDonoActionPerformed
        // TODO add your handling code here:
        irDono();
    }//GEN-LAST:event_jButtonDonoActionPerformed

    private void jButtonAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnimalActionPerformed
        // TODO add your handling code here:
        irAnimal();
    }//GEN-LAST:event_jButtonAnimalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaInicial inicio = new TelaInicial();
                inicio.setVisible(true);
            }
        });
    }

    public ArrayList<Veterinario> veterinarios;
    public ArrayList<Consulta> consultas;
    public ArrayList<Dono> donos;
    public ArrayList<Animal> animais;
    
    private boolean primeiraTelaVet = true;
    private boolean primeiraTelaConsulta = true;
    private boolean primeiraTelaDono = true;
    private boolean primeiraTelaAnimal = true;
    
    private TelaAgendarConsulta agendarConsulta;
    private TelaVeterinario telaVet;
    private TelaDono telaDono;
    private TelaAnimal telaAnimal;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgendarConsulta;
    private javax.swing.JButton jButtonAnimal;
    private javax.swing.JButton jButtonDono;
    private javax.swing.JButton jButtonVeterinario;
    private javax.swing.JLabel jLabelMenu;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    private void IrVet() {
        
        if (primeiraTelaVet == true){
            telaVet = new TelaVeterinario(this);
            primeiraTelaVet = false;
        }
        telaVet.setVisible(true);
        this.setVisible(false);
    }
    
    private void IrConsulta() {
        
        if (primeiraTelaConsulta == true){
            agendarConsulta = new TelaAgendarConsulta(veterinarios, donos, animais, this);
            primeiraTelaConsulta = false;
        } else {
            agendarConsulta.atualizarDados(veterinarios, donos, animais);
        }
        agendarConsulta.setVisible(true);
        this.setVisible(false);
    }
    
    private void irDono(){
        if (primeiraTelaDono == true){
            telaDono = new TelaDono(this, animais);
            primeiraTelaDono = false;
        } else {
            telaDono.atualizarAnimais(animais);
        }
        telaDono.setVisible(true);
        this.setVisible(false);
    }

    private void irAnimal() {
        if (primeiraTelaAnimal == true){
            telaAnimal = new TelaAnimal(this, donos);
            primeiraTelaAnimal = false;
        } else {
            telaAnimal.atualizarDados(donos, animais);
        }
        telaAnimal.setVisible(true);
        this.setVisible(false);
    }
    
}
